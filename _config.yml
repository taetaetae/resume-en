# Site
repository: taetaetae/resume
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

update_date: 2025.04.16

# Personal info
name: Kwon Tae Kwan
title: Software development engineer
email: taetaetae_@naver.com
# email_title: Email (Email title override)
# phone: Your phone number (optional)
# phone_title: Phone (Phone title override)
website: https://taetaetae.github.io
# website_title: Web (Website title override)

# Dark Mode (true/false/never)
darkmode: false

# Social links
#twitter_username: jekyllrb
github_username:  taetaetae
#stackoverflow_username: "00000001"
#dribbble_username: jekyll
facebook_username: taetaetae0
#flickr_username: jekyll
instagram_username: _taetaetae
linkedin_username: taetaetae
#xing_username: jekyll
#pinterest_username: jekyll
#youtube_username: jekyll
#googleplus_username: +jekyll
#orcid_username: 0000-0000-0000-0000

# Additional icon links
additional_links:
- title: careerly
  icon: fab fa-medapps
  url: https://careerly.co.kr/@taetaetae
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
google_analytics: "UA-86432198-1"

# About Section
about_title: About <mark>taetaetae</mark>
about_profile_image: images/profile.png
about_content: | # this will include new lines to allow paragraphs
  As a backend developer with 12 years of experience, I have worked on operating and developing web services that handle large-scale traffic, managing over 10 million users, processing massive amounts of data, and supporting both domestic and global services. I focus on writing clean, maintainable code and structuring complex systems with organization and attention to detail. By ensuring code consistency, optimizing performance, and addressing technical debt, I proactively prevent and resolve potential issues during the development process.
  I am particularly interested in fostering a culture where not only individual growth but also the entire team grows together.
  Currently, as a senior developer within my organization, I am dedicated to troubleshooting, performance optimization, and designing high-performance APIs to contribute to business growth.

content:
  - title: Work Experience. # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-left
        title: NAVER Corporation
        sub_title: Software Engineer
        caption: 2014.05 ~ Present
        description: | # this will include new lines to allow paragraphs
          **Naver Shopping**ㆍ[*https://shopping.naver.com*](https://shopping.naver.com)ㆍ<small>(Feb 2022 – Present)</small><br>
          - Developed product APIs for a new Quick Commerce service and established layer architecture and testing code conventions within the development task force.<br>
          ㆍ Background: Ambiguous module responsibilities due to indiscriminate inter-layer calls and frequent regressions caused by a lack of test codes.<br>
          ㆍ Actions<br>
          ㅤㅤㆍRefined and formalized clear separation of responsibilities between layers, establishing team-wide development standards.<br>
          ㅤㅤㆍIntegrated ArchUnit-based fitness functions into the CI pipeline to automatically detect dependency violations.<br>
          ㅤㅤㆍAuthored unit test guidelines and provided sample codes to facilitate easy adoption among team members.<br>
          ㅤㅤㅤㆍEnhanced code quality and maintainability.<br>
          ㅤㅤㆍDemonstrated leadership by coordinating regular scrums with the product ingestion team, client (Front-End) team, and planning/design teams.<br>
          ㆍ Outcome: Successfully drove prioritization and scheduling efforts to achieve stable feature deliveries within deadlines.<br>
          <div style="height: 0.5em;"></div>
          
          - Built a real-time monitoring system to handle large-scale traffic and accelerate incident response during Fashion Town service operations.<br>
          ㆍ Background: Manual log analysis caused incident response delays of over 5 minutes.<br>
          ㆍ Actions<br>
          ㅤㅤㆍEstablished a real-time traffic monitoring system by collecting Nginx VTS and Prometheus metrics and visualizing them with Grafana dashboards.<br>
          ㅤㅤㆍApplied Nginx Rate Limit configurations (validated through dry_run) to block abnormal traffic and maintain system performance.<br>
          ㅤㅤㆍVisualized application metrics (e.g., response time, DB query speed) to detect and prioritize bottleneck resolutions.<br>
          ㆍ Outcome: Cut incident detection and response time from over 5 minutes to within 1 minute.<br>
          <div style="height: 0.5em;"></div>
          
          - Directed the development of the Product Standardization ('Group Product') service and architected the data pipeline.<br>
          ㆍ Background: Different options of the same product were separately registered, decreasing search accuracy and causing user confusion.<br>
          ㆍ Actions<br>
          ㅤㅤㆍOptimized duplicate elimination and filtering/paging performance by utilizing ElasticSearch collapse queries.<br>
          ㅤㅤㆍImplemented logic to prioritize and display a representative product within each group according to sort policies.<br>
          ㅤㅤㆍDesigned the ingestion data pipeline between MongoDB and ElasticSearch and oversaw the migration.<br>
          ㅤㅤㆍValidated system performance against TPS targets through load testing and optimized query strategies.<br>
          ㅤㅤㆍCollaborated closely with the product ingestion and QA teams to detect and resolve data quality issues.<br>
          ㆍ Outcome<br>
          ㅤㅤㆍTook ownership of task management, schedule control, and risk mitigation to ensure the project's on-time completion.<br>
          ㅤㅤㆍReduced the operational workload for product consultants.<br>
          <div style="height: 0.5em;"></div>
          
          - Formulated a failure recovery strategy and introduced Chaos Engineering to enhance service resilience.<br>
          ㆍ Background: Needed to establish recovery scenarios and simulate failure conditions before service launch.<br>
          ㆍ Actions<br>
          ㅤㅤㆍApplied Fallback Cache (Redis) to mitigate empty response issues during external delays.<br>
          ㅤㅤㆍSimulated delayed responses and network faults using Toxiproxy to verify retry and recovery mechanisms.<br>
          ㆍ Outcome<br>
          ㅤㅤㆍIdentified and corrected fallback cache switching flaws during testing, achieving 100% success rate.<br>
          ㅤㅤㆍRecorded zero critical incidents over six months post-launch, maintaining 99.99% SLA compliance.<br>
          <div style="height: 0.5em;"></div>
          
          - Architected a high-availability data pipeline to process large-scale real-time user events.<br>
          ㆍ Background: Needed to support behavior-based personalized product recommendations and real-time ranking/feed services.<br>
          ㆍ Actions<br>
          ㅤㅤㆍStreamed and processed user behavior events in real-time with Kafka and integrated them with the recommendation system.<br>
          ㅤㅤㆍMigrated from hourly batch-based rankings to near-real-time ranking calculations using Redis, enhancing data freshness.<br>
          ㆍ Outcome: Contributed to a 10% increase in page views after service launch.<br>
          <div style="height: 1em;"></div>
          
          **V Live**ㆍ[*http://www.vlive.tv*](http://www.vlive.tv/)ㆍ<small>(Aug 2018 – Feb 2022)</small><br>
          - Improved broadcast notification speed ([*Related blog*](https://taetaetae.github.io/2019/01/02/faster-parallel-processes/))<br>
          ㆍ Background: Slow notifications disrupted communication between stars and fans and reduced broadcast viewership.<br>
          ㆍ Actions<br>
          ㅤㅤㆍParticipated end-to-end in diagnosing issues, planning, designing, implementing, and deploying optimizations in three phases.<br>
          ㅤㅤㆍRefined target retrieval methods and enhanced RabbitMQ-based parallel processing.<br>
          ㅤㅤㆍReduced Redis load and increased processing throughput by implementing key partitioning to avoid duplicate sends.<br>
          ㆍ Outcome<br>
          ㅤㅤㆍBoosted broadcast notification performance for 10 million users (reduced from 11 minutes → 30 seconds), achieving 95% system improvement.<br>
          ㅤㅤㆍExpanded business models through notification services and launched the new "News Update" feature.<br>
          - Headed a major architectural transformation from Monolithic to MSA to strengthen scalability and fault tolerance.<br>
          ㆍ Adopted Event-Driven Architecture (EDA), Circuit Breakers, and service modularization to enable system resilience.<br>
          ㆍ Implemented Kubernetes-based orchestration to enhance deployment flexibility.<br>
          - Served as Head of Search and Feed, driving service stabilization and designing an event-driven architecture for the search/feed system.<br>
          - Advanced CI/CD automation and code quality through the introduction of SonarQube static analysis and online code reviews ([*Related blog*](https://taetaetae.github.io/2018/02/08/jenkins-sonar-github-integration/))<br>
          - Ensured service continuity and minimized deployment risks by implementing non-disruptive batch deployments ([*Related blog*](https://taetaetae.github.io/2019/10/13/batch-nondisruptive-deploy/))<br>
          <div style="height: 1em;"></div>
          
          **Naver Pay Card Direct Affiliation System (Payment Gateway)**ㆍ<small>(Apr 2016 – Aug 2018)</small><br>
          - Built the initial project environment including CI/CD pipelines, build/deployment systems, and server infrastructure.<br>
          - Created a business-wide monitoring system based on the Elastic Stack for automated anomaly detection ([*Related blog*](https://d2.naver.com/helloworld/3585246))<br>
          - Developed a real-time anomaly detection system to monitor and automatically respond to irregular transaction patterns ([*Related blog*](https://taetaetae.github.io/2018/05/31/anomaly-detection/))<br>
          - Strengthened the reliability of payment systems by adopting distributed tracing for transaction and performance monitoring.<br>
          <div style="height: 1em;"></div>
          
          **Naver Weather**ㆍ[*https://weather.naver.com*](https://weather.naver.com/)ㆍ<small>(May 2014 – Apr 2016)</small><br>
          - Developed a monitoring tool to validate and ensure the integrity of incoming CP (Content Provider) weather data.<br>
          - Migrated data collection processes from crontab to Spring Batch and Jenkins, visualizing and automating data workflows.<br>
          - Established a logging system for the data pipeline to detect anomalies and resolve data processing delays.<br>
          - Ideated and prototyped a map-based weather service, later incorporated into production services.<br>


      - layout: top-left
        title: NHN Technology Services
        sub_title: Software Engineer
        caption: 2013.05 ~ 2014.05
        description: | # this will include new lines to allow paragraphs
          **Naver Game**ㆍ[*https://game.naver.com*](https://game.naver.com/)<br>
          - Operated the Naver ID-based game channeling service and optimized integrations with various game companies<br>
          - Successfully performed DB migration and server transition during the service transfer from NHN Entertainment to NHN<br>
          - Improved the main page performance by eliminating unnecessary initial loading and applying lazy loading, reducing loading time by 19% (2.1s → 1.7s)<br>

      - layout: top-left
        title: Republic of Korea Army Officer (ROTC)
        sub_title: Infantry Battalion Communications Platoon Leader
        caption: 2009.02 ~ 2012.06
        description: | # this will include new lines to allow paragraphs
          - Performed duties as a battalion special staff officer and managed communications platoon personnel, training, and maintenance  
          - Improved wired and wireless communication networks for GOP and FEBA units  
          - Developed an electronic access control system for guard posts (PHP) to address security vulnerabilities caused by manual record-keeping  

  - title: Patent.
    layout: text # Type of content section (list/text)
    content: |
      **Mass Notification Sending Method and System**ㆍ[kipris](https://doi.org/10.8080/1020190128401)  
        - Filed a patent for the mass notification sending method and system implemented in the V Live service  
        - Improved mass notification delivery speed and reduced network load using message queues and Redis  
        - Enhanced broadcast notification speed for 10 million user* (from 11 minutes to 30 seconds)  

  - title: Other Experience. # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-left
        title: Toy Project
        description: | # this will include new lines to allow paragraphs
          **👨‍💻 Dreaming Taetaetae’s Spaceㆍ<a href="https://taetaetae.github.io/" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">https://taetaetae.github.io/</a>**  
          - Personal tech blog (Since September 2016)  
          - Records and shares new technologies learned and troubleshooting experiences from work  

          **Daily DevBlogㆍ<a href="http://daily-devblog.com/" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">http://daily-devblog.com/</a>**  
          - Tech blog subscription service (Since July 2018)  
          - **Python, Flask**  
          - Automatically compiles and emails articles published the previous day every morning at 10 AM, and sends a summary of the most popular posts every Monday at 2 PM  

      - layout: top-left
        title: ETC
        description: | # this will include new lines to allow paragraphs
          **Presentations**  
            - <a href="https://d2.naver.com/news/8012036" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">DEVIEW CAMPUS 2023: Welcome, First Time Growing?</a> - 2023.02.27  
            - <a href="https://festa.io/events/364" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Everyone’s TOY STORY: How Far Have You Gone with Side Projects?</a> - 2019.07.14  
            - <a href="https://taetaetae.github.io/2019/05/19/d-light-togetherthon-2019" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">GDG D.light Together-thon 2019</a> - 2019.05.11  
            - <a href="https://archive.pycon.kr/2018/program/81" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">PYCON 2018 - Lightning Talk: Creating Toy Projects with Python</a> - 2018.08.19  

          **Articles**  
            - <a href="https://yozm.wishket.com/magazine/detail/2539" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Growing 1cm More Than Yesterday / Yozm IT (Career Refactoring: Developer Growth)</a> - 2024.04.11  
            - <a href="https://ebook-product.kyobobook.co.kr/dig/epd/ebook/E000005037115" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">readItzine Issue 5, Developer’s Life / Kyobo Bookstore</a> - 2022.08.15  
            - <a href="https://careerly.co.kr/profiles/105233" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Careerly Curation</a> - Since 2022.03.27  
            - <a href="https://blog.naver.com/naver_diary/222110224274" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Naver Official Diary: [Naverficial] If My Code Can Make Fans Around the World Happy!</a> - 2020.10.08  
            - <a href="https://d2.naver.com/helloworld/3585246" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Naver D2 - Helloworld: Who's Accessing My Server?</a> - 2018.04.30  

          **Book Reviews**  
            - <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791140700288" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">The Effective Engineer / Translated by Lee Mi-ryeong</a> - 2022.07.01  
            - <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791165920500" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">My Data Analysis Platform: Elasticsearch / Written by Joo Jung-nam</a> - 2021.03.26  
            - <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791160509519" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Simple Software / Translated by Lee Mi-ryeong</a> - 2019.10.23  

          **Others**  
            - Naver 2022 New Employee Internal Lecture, **"Is That Developer Okay? (feat. Growth)"** - 2022.11.30  
            - Naver 2021 New Employee Mentoring Participant, <a href="https://news.naver.com/main/read.nhn?mode=LSD&mid=sec&sid1=105&oid=018&aid=0004836785" target="_blank" style="color: inherit;font-style: italic;font-weight: 300;">Interview Article</a> - 2021.01.25  

  - title: Skill.
    layout: text # Type of content section (list/text)
    content: |
      - Language : Java, Kotlin, Python
      - Framework : Spring (Boot, Batch, Core), Flask
      - ORM : Mybatis, Spring Data JDBC
      - Database : MySql, MongoDB, Redis, Elasticsearch
      - Build automation tool : Maven, Gradle
      - Server : Apache, Nginx, Tomcat
      - DevOps : CI/CD, Jenkins, Ansible, Github Actions
      - Linux CentOS, k8s
      - Pinpoint, nGrinder

# Footer
footer_show_references: false
# references_title: References on request (Override references text)

# Build settings
# theme: modern-resume-theme (Use this is you are hosting your resume yourself)
# remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
